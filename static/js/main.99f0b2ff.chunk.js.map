{"version":3,"sources":["img/LOGO.png","pages/AboutMePage/AboutMePage.js","components/Spinner/Spinner.js","utils.js","WebAPI.js","redux/reducers/postReducer.js","redux/selector.js","pages/AddPostPage/AddPostPage.js","pages/EditPostPage/EditPostPage.js","pages/HomePage/HomePage.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","pages/PostListPage/PostListPage.js","pages/PostPage/PostPage.js","pages/RegisterPage/RegisterPage.js","components/Header/Header.js","components/App/App.js","redux/store.js","index.js"],"names":["Wrap","styled","div","Banner","AboutMe","Name","Intro","AboutPage","src","logo","alt","rotate","keyframes","SpinnerBorder","Spinner","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","postReducer","createSlice","name","initialState","posts","pages","post","isLoadingPost","errorMessage","reducers","setPosts","state","action","payload","setPages","setPost","setIsLoadingPost","setErrorMessage","actions","getPaginationPost","page","limit","dispatch","fetch","then","res","getPaginationPostAPI","dataCount","headers","get","totalPage","Math","ceil","i","push","pagination","json","getPost","id","getPostAPI","addPost","title","body","method","authorization","JSON","stringify","addPostAPI","ok","message","editPost","editPostAPI","deletePost","response","deletePostAPI","selectPost","store","selectPosts","selectPages","selectIsLoadingPost","selectPostErrorMessage","selectUser","user","selectIsLoadingAuth","isLoadingAuth","selectAuthErrorMessage","ErrorMessage","Form","form","InputWrapper","InputLabel","TextArea","textarea","SubmitButton","button","AddPostPage","useState","setTitle","setBody","history","useHistory","useDispatch","isLoading","useSelector","onSubmit","e","preventDefault","value","onChange","target","useParams","useEffect","goBack","Root","PostContainer","PostInfo","PostTitle","PostDate","PostBody","ReadMore","Link","EditButton","DeleteButton","PageContainer","PageBtn","a","Post","handleDelete","handleEditClick","Date","createdAt","toLocaleString","onClick","to","HomePage","window","location","reload","map","handlePageClick","userReducer","setIsLoadingAuth","setUser","getMe","getMeAPI","data","login","username","password","loginAPI","register","nickname","registerAPI","LoginPage","setUsername","setPassword","type","length","PostHeader","PostPage","RegisterPage","setNickname","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","useLocation","pathname","App","exact","path","PostListPage","AboutMePage","EditPostPage","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"+JAAe,MAA0B,iC,ulCCGzC,IAAMA,EAAOC,IAAOC,IAAV,KAOJC,EAASF,IAAOC,IAAV,KAkBNE,EAAUH,IAAOC,IAAV,KAYPG,EAAOJ,IAAOC,IAAV,KAMJI,EAAQL,IAAOC,IAAV,KAoBIK,EAdG,WAChB,OACE,cAACP,EAAD,UACE,cAACG,EAAD,UACE,eAACC,EAAD,WACE,qBAAKI,IAAKC,EAAMC,IAAI,SACpB,cAACL,EAAD,yBACA,cAACC,EAAD,iH,ulBCzDV,IAAMK,EAASC,YAAH,KAUNZ,EAAOC,IAAOC,IAAV,KAOJW,EAAgBZ,IAAOC,IAAV,IAOJS,GAWAG,EARC,WACd,OACE,cAAC,EAAD,UACE,cAACD,EAAD,O,QC9BAE,EAAe,SAACC,GACpBC,aAAaC,QAHI,QAGgBF,IAG7BG,EAAe,WACnB,OAAOF,aAAaG,QAAQ,UCLxBC,EAAQ,qCCSDC,EAAcC,YAAY,CACrCC,KAAM,QACNC,aAAc,CACZC,MAAO,GACPC,MAAO,GACPC,KAAM,KACNC,eAAe,EACfC,aAAc,MAEhBC,SAAU,CACRC,SAAU,SAACC,EAAOC,GAChBD,EAAMP,MAAQQ,EAAOC,SAGvBC,SAAU,SAACH,EAAOC,GAChBD,EAAMN,MAAQO,EAAOC,SAGvBE,QAAS,SAACJ,EAAOC,GACfD,EAAML,KAAOM,EAAOC,SAGtBG,iBAAkB,SAACL,EAAOC,GACxBD,EAAMJ,cAAgBK,EAAOC,SAG/BI,gBAAiB,SAACN,EAAOC,GACvBD,EAAMH,aAAeI,EAAOC,Y,EAW9Bb,EAAYkB,QALdR,E,EAAAA,SACAI,E,EAAAA,SACAC,E,EAAAA,QACAC,E,EAAAA,iBACAC,E,EAAAA,gBAWWE,EAAoB,SAACC,EAAMC,GAAP,OAAiB,SAACC,GACjDA,EAASN,GAAiB,ID9CF,SAACI,EAAMC,GAC/B,OAAOE,MAAM,GAAD,OACPxB,EADO,wBACiBqB,EADjB,mBACgCC,EADhC,iCAEVG,MAAK,SAACC,GAAD,OAASA,KC4ChBC,CAAqBN,EAAMC,GAAOG,MAAK,SAACC,GACtC,IAAME,EAAYF,EAAIG,QAAQC,IAAI,iBAC5BC,EAAYC,KAAKC,KAAKL,EAAYN,GAExC,OADAC,EAASR,EFtDM,SAACgB,GAElB,IADA,IAAMV,EAAO,GACJa,EAAI,EAAGA,GAAKH,EAAWG,IAC9Bb,EAAKc,KAAKD,GAEZ,OAAOb,EEiDae,CAAWL,KACtBL,EAAIW,OAAOZ,MAAK,SAACC,GACtBH,EAASZ,EAASe,IAClBH,EAASN,GAAiB,YAKnBqB,EAAU,SAACC,GAAD,OAAQ,SAAChB,GAE9B,OADAA,EAASN,GAAiB,ID/DZ,SAACsB,GACf,OAAOf,MAAM,GAAD,OAAIxB,EAAJ,qBAAyBuC,IAAMd,MAAK,SAACC,GAAD,OAASA,EAAIW,UC+DtDG,CAAWD,GAAId,MAAK,SAACC,GAG1B,OAFAH,EAASP,EAAQU,EAAI,KACrBH,EAASN,GAAiB,IACnBS,EAAI,QAIFe,EAAU,SAACC,EAAOC,GAAR,OAAiB,SAACpB,GAGvC,OAFAA,EAASN,GAAiB,IAC1BM,EAASL,EAAgB,ODzBX,SAACwB,EAAOC,GACtB,IAAMhD,EAAQG,IAEd,OAAO0B,MAAM,GAAD,OAAIxB,EAAJ,UAAsB,CAChC4C,OAAQ,OACRf,QAAS,CACP,eAAgB,mBAChBgB,cAAc,UAAD,OAAYlD,IAE3BgD,KAAMG,KAAKC,UAAU,CACnBL,QACAC,WAEDlB,MAAK,SAACC,GAAD,OAASA,EAAIW,UCadW,CAAWN,EAAOC,GAAMlB,MAAK,SAACC,GACnC,OAAe,IAAXA,EAAIuB,IACN1B,EAASN,GAAiB,IACnBM,EAASL,EAAgBQ,EAAIwB,YAEtC3B,EAASN,GAAiB,IACnBS,QAIEyB,EAAW,SAACZ,EAAIG,EAAOC,GAAZ,OAAqB,SAACpB,GAG5C,OAFAA,EAASN,GAAiB,IAC1BM,EAASL,EAAgB,ODtBV,SAACqB,EAAIG,EAAOC,GAC3B,IAAMhD,EAAQG,IAEd,OAAO0B,MAAM,GAAD,OAAIxB,EAAJ,kBAAsBuC,GAAM,CACtCK,OAAQ,QACRf,QAAS,CACP,eAAgB,mBAChBgB,cAAc,UAAD,OAAYlD,IAE3BgD,KAAMG,KAAKC,UAAU,CACnBL,QACAC,WAEDlB,MAAK,SAACC,GAAD,OAASA,EAAIW,UCUde,CAAYb,EAAIG,EAAOC,GAAMlB,MAAK,SAACC,GACxC,OAAe,IAAXA,EAAIuB,IACN1B,EAASN,GAAiB,IACnBM,EAASL,EAAgBQ,EAAIwB,YAEtC3B,EAASN,GAAiB,IACnBS,QAIE2B,EAAa,SAACd,GAAD,OAAQ,SAAChB,GACjC,ODlBiB,SAACgB,GAClB,IAAM5C,EAAQG,IACd,OAAO0B,MAAM,GAAD,OAAIxB,EAAJ,kBAAsBuC,GAAM,CACtCK,OAAQ,SACRf,QAAS,CACP,eAAgB,mBAChBgB,cAAc,UAAD,OAAYlD,MAE1B8B,MAAK,SAAC6B,GAAD,OAAcA,EAASjB,UCUxBkB,CAAchB,GAAId,MAAK,SAACC,GAAD,OAASA,OAG1BzB,IAAf,Q,OC/GMuD,EAAa,SAACC,GAAD,OAAWA,EAAMpD,MAAME,MACpCmD,EAAc,SAACD,GAAD,OAAWA,EAAMpD,MAAMA,OACrCsD,EAAc,SAACF,GAAD,OAAWA,EAAMpD,MAAMC,OACrCsD,EAAsB,SAACH,GAAD,OAAWA,EAAMpD,MAAMG,eAC7CqD,EAAyB,SAACJ,GAAD,OAAWA,EAAMpD,MAAMI,cAChDqD,EAAa,SAACL,GAAD,OAAWA,EAAMM,KAAKA,MACnCC,GAAsB,SAACP,GAAD,OAAWA,EAAMM,KAAKE,eAC5CC,GAAyB,SAACT,GAAD,OAAWA,EAAMM,KAAKtD,c,orCCIrD,IAAM0D,GAAevF,IAAOC,IAAV,MAMZuF,GAAOxF,IAAOyF,KAAV,MAQJC,GAAe1F,IAAOC,IAAV,MAgBZ0F,GAAa3F,IAAOC,IAAV,MAKV2F,GAAW5F,IAAO6F,SAAV,MAQRC,GAAe9F,IAAO+F,OAAV,MAmDHC,GAtCK,WAAO,IAAD,EACEC,mBAAS,IADX,mBACjBnC,EADiB,KACVoC,EADU,OAEAD,mBAAS,IAFT,mBAEjBlC,EAFiB,KAEXoC,EAFW,KAGlBC,EAAUC,cACV1D,EAAW2D,cACXC,EAAYC,YAAYxB,GACxBnD,EAAe2E,YAAYvB,GAUjC,OACE,mCACIsB,EAcA,cAAC,EAAD,IAbA,eAACf,GAAD,CAAMiB,SAXS,SAACC,GACpBA,EAAEC,iBACEJ,GACJ5D,EAASkB,EAAQC,EAAOC,IAAOlB,MAAK,SAACC,GAC/BA,EAAIa,IAAIyC,EAAQ7C,KAAR,gBAAsBT,EAAIa,SAOpC,UACE,eAAC+B,GAAD,WACE,cAACC,GAAD,2BACA,uBAAOiB,MAAO9C,EAAO+C,SAAU,SAACH,GAAD,OAAOR,EAASQ,EAAEI,OAAOF,aAE1D,eAAClB,GAAD,WACE,cAACC,GAAD,2BACA,cAACC,GAAD,CAAUgB,MAAO7C,EAAM8C,SAAU,SAACH,GAAD,OAAOP,EAAQO,EAAEI,OAAOF,aAE3D,cAACd,GAAD,2BACCjE,GAAgB,cAAC0D,GAAD,UAAe1D,U,orCCrF1C,IAAM0D,GAAevF,IAAOC,IAAV,MAMZuF,GAAOxF,IAAOyF,KAAV,MAQJC,GAAe1F,IAAOC,IAAV,MAgBZ0F,GAAa3F,IAAOC,IAAV,MAKV2F,GAAW5F,IAAO6F,SAAV,MAQRC,GAAe9F,IAAO+F,OAAV,MA0DHC,GA7CK,WAAO,IACjBrC,EAAOoD,cAAPpD,GADgB,EAEEsC,mBAAS,IAFX,mBAEjBnC,EAFiB,KAEVoC,EAFU,OAGAD,mBAAS,IAHT,mBAGjBlC,EAHiB,KAGXoC,EAHW,KAIlBC,EAAUC,cACV1D,EAAW2D,cACXC,EAAYC,YAAYxB,GACxBnD,EAAe2E,YAAYvB,GAEjC+B,qBAAU,WAKR,OAJArE,EAASe,EAAQC,IAAKd,MAAK,SAACC,GAC1BoD,EAASpD,EAAIgB,OACbqC,EAAQrD,EAAIiB,SAEP,kBAAMpB,EAASP,EAAQ,UAC7B,CAACO,EAAUgB,IAQd,OACE,mCACI4C,EAcA,cAAC,EAAD,IAbA,eAAC,GAAD,CAAME,SATS,SAACC,GACpBA,EAAEC,iBACEJ,GACJ5D,EAAS4B,EAASZ,EAAIG,EAAOC,IAAOlB,MAAK,kBAAMuD,EAAQa,aAMnD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,2BACA,uBAAOL,MAAO9C,EAAO+C,SAAU,SAACH,GAAD,OAAOR,EAASQ,EAAEI,OAAOF,aAE1D,eAAC,GAAD,WACE,cAAC,GAAD,2BACA,cAAC,GAAD,CAAUA,MAAO7C,EAAM8C,SAAU,SAACH,GAAD,OAAOP,EAAQO,EAAEI,OAAOF,aAE3D,cAAC,GAAD,2BACC/E,GAAgB,cAAC,GAAD,UAAeA,U,itECvF1C,IAAMqF,GAAOlH,IAAOC,IAAV,MAKJkH,GAAgBnH,IAAOC,IAAV,MAMbmH,GAAWpH,IAAOC,IAAV,MASRoH,GAAYrH,IAAOC,IAAV,MAQTqH,GAAWtH,IAAOC,IAAV,MAIRsH,GAAWvH,IAAOC,IAAV,MAQRuH,GAAWxH,YAAOyH,KAAPzH,CAAH,MASR0H,GAAa1H,IAAO+F,OAAV,MAWV4B,GAAe3H,IAAO+F,OAAV,MAYZ6B,GAAgB5H,IAAOC,IAAV,MAMb4H,GAAU7H,IAAO8H,EAAV,MAiBPC,GAAO,SAAC,GAA6C,IAA3CpG,EAA0C,EAA1CA,KAAMqG,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBAC5B9C,EAAOqB,YAAYtB,GAEzB,OACE,eAACiC,GAAD,WACE,cAACE,GAAD,UAAY1F,EAAKmC,QACjB,eAACsD,GAAD,WACE,cAACE,GAAD,UAAW,IAAIY,KAAKvG,EAAKwG,WAAWC,mBACnCjD,GACC,gCACE,cAACuC,GAAD,CAAYW,QAAS,kBAAMJ,EAAgBtG,EAAKgC,KAAhD,0BAGA,cAACgE,GAAD,CAAcU,QAAS,kBAAML,EAAarG,EAAKgC,KAA/C,gCAMN,cAAC4D,GAAD,UAAW5F,EAAKoC,OAChB,cAACyD,GAAD,CAAUc,GAAE,gBAAW3G,EAAKgC,IAA5B,2BA2DS4E,GAtDE,WACf,IAAMnC,EAAUC,cACV5E,EAAQ+E,YAAY1B,GACpBpD,EAAQ8E,YAAYzB,GACpBwB,EAAYC,YAAYxB,GAExBrC,EAAW2D,cAMX2B,EAAkB,SAACtE,GACvByC,EAAQ7C,KAAR,gBAAsBI,KAGlBqE,EAAe,SAACrE,GACpBhB,EAAS8B,EAAWd,IAAKd,MAAK,WAC5B2F,OAAOC,SAASC,aAQpB,OAJA1B,qBAAU,WACRrE,EAASH,EAAkB,EAlBf,MAmBX,CAACG,IAGF,cAACuE,GAAD,WACIX,GAAa9E,EACb,qCACGA,EAAMkH,KAAI,SAAChH,GAAD,OACT,cAAC,GAAD,CAEEA,KAAMA,EACNqG,aAAcA,EACdC,gBAAiBA,GAHZtG,EAAKgC,OAMd,cAACiE,GAAD,UACGlG,GACCA,EAAMiH,KAAI,SAAClG,GAAD,OACR,cAACoF,GAAD,CAAoBQ,QAAS,kBAjCnB,SAAC5F,GACvBE,EAASH,EAAkBC,EAJf,IAoCmCmG,CAAgBnG,IAAnD,SACGA,GADWA,WAOtB,cAAC,EAAD,OChLKoG,GAAcvH,YAAY,CACrCC,KAAM,OACNC,aAAc,CACZ2D,KAAM,KACNE,eAAe,EACfxD,aAAc,MAEhBC,SAAU,CACRgH,iBAAkB,SAAC9G,EAAOC,GACxBD,EAAMqD,cAAgBpD,EAAOC,SAG/B6G,QAAS,SAAC/G,EAAOC,GACfD,EAAMmD,KAAOlD,EAAOC,SAGtBI,gBAAiB,SAACN,EAAOC,GACvBD,EAAMH,aAAeI,EAAOC,Y,GAS9B2G,GAAYtG,QAHduG,G,GAAAA,iBACAC,G,GAAAA,QACAzG,G,GAAAA,gBAGW0G,GAAQ,kBAAM,SAACrG,GAG1B,OAFAA,EAASmG,IAAiB,IAC1BnG,EAASL,GAAgB,ONSb,WACZ,IAAMvB,EAAQG,IAEd,OAAO0B,MAAM,GAAD,OAAIxB,EAAJ,OAAmB,CAC7B4C,OAAQ,MACRf,QAAS,CACPgB,cAAc,UAAD,OAAYlD,MAE1B8B,MAAK,SAACC,GAAD,OAASA,EAAIW,UMhBdwF,GAAWpG,MAAK,SAACC,GACtB,OAAe,IAAXA,EAAIuB,IACNvD,EAAa,MACb6B,EAASmG,IAAiB,IACnBnG,EAASL,GAAgBQ,EAAIwB,YAEtC3B,EAASoG,GAAQjG,EAAIoG,OACrBvG,EAASmG,IAAiB,IACnBhG,QAIEqG,GAAQ,SAACC,EAAUC,GAAX,OAAwB,SAAC1G,GAG5C,OAFAA,EAASmG,IAAiB,IAC1BnG,EAASL,GAAgB,ONjCb,SAAC8G,EAAUC,GACvB,OAAOzG,MAAM,GAAD,OAAIxB,EAAJ,UAAsB,CAChC4C,OAAQ,OACRf,QAAS,CACP,eAAgB,oBAElBc,KAAMG,KAAKC,UAAU,CACnBiF,WACAC,eAEDxG,MAAK,SAACC,GAAD,OAASA,EAAIW,UMwBd6F,CAASF,EAAUC,GAAUxG,MAAK,SAACC,GACxC,OAAe,IAAXA,EAAIuB,IACN1B,EAASmG,IAAiB,IACnBnG,EAASL,GAAgBQ,EAAIwB,YAEtCxD,EAAagC,EAAI/B,OACV4B,EAASqG,YAIPO,GAAW,SAACH,EAAUI,EAAUH,GAArB,OAAkC,SAAC1G,GAGzD,OAFAA,EAASmG,IAAiB,IAC1BnG,EAASL,GAAgB,ONjCV,SAAC8G,EAAUI,EAAUH,GACpC,OAAOzG,MAAM,GAAD,OAAIxB,EAAJ,aAAyB,CACnC4C,OAAQ,OACRf,QAAS,CACP,eAAgB,oBAElBc,KAAMG,KAAKC,UAAU,CACnBqF,WACAJ,WACAC,eAEDxG,MAAK,SAACC,GAAD,OAASA,EAAIW,UMuBdgG,CAAYL,EAAUI,EAAUH,GAAUxG,MAAK,SAACC,GACrD,OAAe,IAAXA,EAAIuB,IACN1B,EAASmG,IAAiB,IACnBnG,EAASL,GAAgBQ,EAAIwB,YAEtCxD,EAAagC,EAAI/B,OACV4B,EAASqG,YAILH,MAAf,Q,29BCnEA,IAAMtD,GAAevF,IAAOC,IAAV,MAMZuF,GAAOxF,IAAOyF,KAAV,MASJC,GAAe1F,IAAOC,IAAV,MAYZ0F,GAAa3F,IAAOC,IAAV,MAKV6F,GAAe9F,IAAO+F,OAAV,MAgDH2D,OAnCf,WAAsB,IAAD,EACazD,mBAAS,IADtB,mBACZmD,EADY,KACFO,EADE,OAEa1D,mBAAS,IAFtB,mBAEZoD,EAFY,KAEFO,EAFE,KAGbjH,EAAW2D,cACXC,EAAYC,YAAYpB,IACxBvD,EAAe2E,YAAYlB,IAC3Bc,EAAUC,cAShB,OACE,eAAC,GAAD,CAAMI,SARa,SAACC,GACpBA,EAAEC,iBACEJ,GACJ5D,EAASwG,GAAMC,EAAUC,IAAWxG,MAAK,SAACC,GACpCA,EAAIoG,MAAM9C,EAAQ7C,KAAK,SAI7B,UACE,eAAC,GAAD,WACE,cAAC,GAAD,uBACA,uBAAOqD,MAAOwC,EAAUvC,SAAU,SAACH,GAAD,OAAOiD,EAAYjD,EAAEI,OAAOF,aAEhE,eAAC,GAAD,WACE,cAAC,GAAD,uBACA,uBACEiD,KAAK,WACLjD,MAAOyC,EACPxC,SAAU,SAACH,GAAD,OAAOkD,EAAYlD,EAAEI,OAAOF,aAG1C,cAAC,GAAD,2BACC/E,GAAgB,cAAC,GAAD,UAAeA,Q,8oCCzEtC,IAAMqF,GAAOlH,IAAOC,IAAV,MAKJkH,GAAgBnH,IAAOC,IAAV,MAYboH,GAAYrH,YAAOyH,KAAPzH,CAAH,MAMTsH,GAAWtH,IAAOC,IAAV,MAIR2H,GAAgB5H,IAAOC,IAAV,MAMb4H,GAAU7H,IAAO8H,EAAV,MAiBPC,GAAO,SAAC,GAAc,IAAZpG,EAAW,EAAXA,KACd,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAW2G,GAAE,gBAAW3G,EAAKgC,IAA7B,SAAoChC,EAAKmC,QACzC,cAAC,GAAD,UAAW,IAAIoE,KAAKvG,EAAKwG,WAAWC,uBA2C3BG,GAtCE,WACf,IAAM9G,EAAQ+E,YAAY1B,GACpByB,EAAYC,YAAYxB,GACxBtD,EAAQ8E,YAAYzB,GACpBpC,EAAW2D,cAWjB,OAJAU,qBAAU,WACRrE,EAASH,EAAkB,EAPf,OAQX,CAACG,IAGF,cAAC,GAAD,WACI4D,GAAa9E,EAAMqI,OAAS,EAC5B,qCACGrI,EAAMkH,KAAI,SAAChH,GAAD,OACT,cAAC,GAAD,CAAoBA,KAAMA,GAAfA,EAAKgC,OAElB,cAAC,GAAD,UACGjC,GACCA,EAAMiH,KAAI,SAAClG,GAAD,OACR,cAAC,GAAD,CAAoB4F,QAAS,kBAlBnB,SAAC5F,GACvBE,EAASH,EAAkBC,EAHf,KAoBmCmG,CAAgBnG,IAAnD,SACGA,GADWA,WAOtB,cAAC,EAAD,O,0wCC3FR,IAAM0E,GAAgBnH,IAAOC,IAAV,MAQb8J,GAAa/J,IAAOC,IAAV,MAQVoH,GAAYrH,IAAOC,IAAV,MAKTqH,GAAWtH,IAAOC,IAAV,MAIRsH,GAAWvH,IAAOC,IAAV,MAMRyH,GAAa1H,IAAO+F,OAAV,MAWV4B,GAAe3H,IAAO+F,OAAV,MA8DHiE,GAlDE,WAAO,IACdrG,EAAOoD,cAAPpD,GACFhB,EAAW2D,cACX3E,EAAO6E,YAAY5B,GACnBO,EAAOqB,YAAYtB,GACnBqB,EAAYC,YAAYxB,GACxBoB,EAAUC,cAiBhB,OALAW,qBAAU,WAER,OADArE,EAASe,EAAQC,IACV,kBAAMhB,EAASP,EAAQ,UAC7B,CAACuB,EAAIhB,IAGN,oCACI4D,GAAa5E,EACb,eAAC,GAAD,WACE,cAAC,GAAD,UAAYA,EAAKmC,QACjB,eAACiG,GAAD,WACE,cAAC,GAAD,UAAW,IAAI7B,KAAKvG,EAAKwG,WAAWC,mBACnCjD,GACC,gCACE,cAAC,GAAD,CAAYkD,QAAS,kBAlBX,SAAC1E,GACvByC,EAAQ7C,KAAR,gBAAsBI,IAiBiBsE,CAAgBtG,EAAKgC,KAAhD,0BAGA,cAAC,GAAD,CAAc0E,QAAS,kBA3BhB,SAAC1E,GACpBhB,EAAS8B,EAAWd,IAAKd,MAAK,WAC5BuD,EAAQa,YAyB+Be,CAAarG,EAAKgC,KAA/C,gCAMN,cAAC,GAAD,UAAWhC,EAAKoC,UAGlB,cAAC,EAAD,O,29BCpGR,IAAMwB,GAAevF,IAAOC,IAAV,MAMZuF,GAAOxF,IAAOyF,KAAV,MASJC,GAAe1F,IAAOC,IAAV,MAYZ0F,GAAa3F,IAAOC,IAAV,MAKV6F,GAAe9F,IAAO+F,OAAV,MAsDHkE,GAzCM,WAAO,IAAD,EACOhE,mBAAS,IADhB,mBAClBmD,EADkB,KACRO,EADQ,OAEO1D,mBAAS,IAFhB,mBAElBuD,EAFkB,KAERU,EAFQ,OAGOjE,mBAAS,IAHhB,mBAGlBoD,EAHkB,KAGRO,EAHQ,KAInBjH,EAAW2D,cACXC,EAAYC,YAAYpB,IACxBvD,EAAe2E,YAAYlB,IAC3Bc,EAAUC,cAUhB,OACE,eAAC,GAAD,CAAMI,SATa,SAACC,GACpBA,EAAEC,iBACEJ,GACJ5D,EAAS4G,GAASH,EAAUI,EAAUH,IAAWxG,MAAK,SAACC,GACjDA,EAAIoG,MAAM9C,EAAQ7C,KAAK,SAK7B,UACE,eAAC,GAAD,WACE,cAAC,GAAD,uBACA,uBAAOqD,MAAOwC,EAAUvC,SAAU,SAACH,GAAD,OAAOiD,EAAYjD,EAAEI,OAAOF,aAEhE,eAAC,GAAD,WACE,cAAC,GAAD,uBACA,uBAAOA,MAAO4C,EAAU3C,SAAU,SAACH,GAAD,OAAOwD,EAAYxD,EAAEI,OAAOF,aAEhE,eAAC,GAAD,WACE,cAAC,GAAD,uBACA,uBACEiD,KAAK,WACLjD,MAAOyC,EACPxC,SAAU,SAACH,GAAD,OAAOkD,EAAYlD,EAAEI,OAAOF,aAG1C,cAAC,GAAD,2BACC/E,GAAgB,cAAC,GAAD,UAAeA,Q,gkCCpFtC,IAAMsI,GAAkBnK,IAAOC,IAAV,MAgBfmK,GAAQpK,YAAOyH,KAAPzH,CAAH,MAOLqK,GAAarK,IAAOC,IAAV,MAMVqK,GAAMtK,YAAOyH,KAAPzH,CAAH,MAUL,SAACuK,GAAD,OAAWA,EAAMC,SAAN,oCAGTC,GAAgBzK,IAAOC,IAAV,KAIfoK,IA+DWK,OA1Df,WACE,IAAMvF,EAAOqB,YAAYtB,GACnBqB,EAAYC,YAAYpB,IACxBqD,EAAWkC,cACXvE,EAAUC,cACV1D,EAAW2D,cASjB,OACE,eAAC6D,GAAD,WACE,eAACM,GAAD,WACE,cAACL,GAAD,CAAO9B,GAAG,IAAV,kBACA,eAAC+B,GAAD,WACE,cAACC,GAAD,CAAKhC,GAAG,IAAIkC,QAA+B,MAAtB/B,EAASmC,SAA9B,0BAGA,cAACN,GAAD,CAAKhC,GAAG,aAAakC,QAA+B,eAAtB/B,EAASmC,SAAvC,sCAGA,cAACN,GAAD,CAAKhC,GAAG,YAAYkC,QAA+B,cAAtB/B,EAASmC,SAAtC,sCAKJ,cAACP,GAAD,UACG9D,EACC,6BAEA,sCACIpB,GACA,qCACE,cAACmF,GAAD,CAAKhC,GAAG,SAASkC,QAA+B,WAAtB/B,EAASmC,SAAnC,0BAGA,cAACN,GAAD,CAAKhC,GAAG,YAAYkC,QAA+B,cAAtB/B,EAASmC,SAAtC,6BAKHzF,GACC,cAACmF,GAAD,CAAKhC,GAAG,YAAYkC,QAA+B,cAAtB/B,EAASmC,SAAtC,sCAIDzF,GAAQ,cAACmF,GAAD,CAAKjC,QA3CH,WACnBvH,EAAa,IACb6B,EAASoG,GAAQ,OACS,MAAtBN,EAASmC,UACXxE,EAAQ7C,KAAK,MAuCE,mC,+FC1FrB,IAAM2D,GAAOlH,IAAOC,IAAV,MAgDK4K,OA5Cf,WACE,IAAMlI,EAAW2D,cAQjB,OANAU,qBAAU,WACJ9F,KACFyB,EAASqG,QAEV,CAACrG,IAGF,cAAC,GAAD,UACE,eAAC,KAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmI,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAACC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,YAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAACG,GAAD,eCtDGC,eAAe,CAC5BC,QAAS,CACP3J,MAAOJ,EACP8D,KAAM0D,MCDVwC,IAASC,OACP,cAAC,IAAD,CAAUzG,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEF0G,SAASC,eAAe,W","file":"static/js/main.99f0b2ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LOGO.6b8bea6d.png\";","import styled from \"styled-components\";\nimport logo from \"../../img/LOGO.png\";\n\nconst Wrap = styled.div`\n  margin: 30px auto;\n  position: relative;\n  width: 900px;\n  padding: 20px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n`;\nconst Banner = styled.div`\n  position: relative;\n  background: url(https://i.imgur.com/b0S7pGV.gif) center top no-repeat;\n  background-size: cover;\n  height: 400px;\n  border-radius: 20px;\n  overflow: hidden;\n\n  &:after {\n    position: absolute;\n    content: \"\";\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.5);\n  }\n`;\nconst AboutMe = styled.div`\n  position: relative;\n  z-index: 2;\n  text-align: center;\n  padding-top: 60px;\n\n  img {\n    width: 100px;\n    height: 100px;\n  }\n`;\n\nconst Name = styled.div`\n  text-align: center;\n  font-size: 1.5em;\n  font-weight: bold;\n  color: white;\n`;\nconst Intro = styled.div`\n  padding: 30px 50px;\n  color: white;\n  font-weight: bold;\n`;\n\nconst AboutPage = () => {\n  return (\n    <Wrap>\n      <Banner>\n        <AboutMe>\n          <img src={logo} alt=\"logo\" />\n          <Name>small_leaf</Name>\n          <Intro>明知此花終將謝，然亦迷戀難自拔</Intro>\n        </AboutMe>\n      </Banner>\n    </Wrap>\n  );\n};\n\nexport default AboutPage;\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n   from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 200px;\n`;\n\nconst SpinnerBorder = styled.div`\n  display: inline-block;\n  width: 2rem;\n  height: 2rem;\n  border: 5px solid black;\n  border-right-color: transparent;\n  border-radius: 50%;\n  animation: ${rotate} 0.75s linear infinite;\n`;\n\nconst Spinner = () => {\n  return (\n    <Wrap>\n      <SpinnerBorder />\n    </Wrap>\n  );\n};\n\nexport default Spinner;\n","const TOKEN_NAME = \"token\";\n\nconst setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nconst getAuthToken = () => {\n  return localStorage.getItem(\"token\");\n};\n\nconst pagination = (totalPage) => {\n  const page = [];\n  for (let i = 1; i <= totalPage; i++) {\n    page.push(i);\n  }\n  return page;\n};\n\nexport { setAuthToken, getAuthToken, pagination };\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = `https://student-json-api.lidemy.me`;\n\nconst getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nconst getPost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\n};\n\nconst getPaginationPost = (page, limit) => {\n  return fetch(\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc`\n  ).then((res) => res);\n};\n\nconst login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nconst register = (username, nickname, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nconst getMe = () => {\n  const token = getAuthToken();\n\n  return fetch(`${BASE_URL}/me`, {\n    method: \"GET\",\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nconst addPost = (title, body) => {\n  const token = getAuthToken();\n\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nconst editPost = (id, title, body) => {\n  const token = getAuthToken();\n\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nconst deletePost = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n  }).then((response) => response.json());\n};\n\nexport {\n  getPosts,\n  getPost,\n  getPaginationPost,\n  register,\n  login,\n  getMe,\n  addPost,\n  editPost,\n  deletePost,\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { pagination } from \"../../utils\";\r\nimport {\r\n  getPost as getPostAPI,\r\n  getPosts as getPostsAPI,\r\n  getPaginationPost as getPaginationPostAPI,\r\n  addPost as addPostAPI,\r\n  editPost as editPostAPI,\r\n  deletePost as deletePostAPI,\r\n} from \"../../WebAPI\";\r\n\r\nexport const postReducer = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    posts: [],\r\n    pages: [],\r\n    post: null,\r\n    isLoadingPost: false,\r\n    errorMessage: null,\r\n  },\r\n  reducers: {\r\n    setPosts: (state, action) => {\r\n      state.posts = action.payload;\r\n    },\r\n\r\n    setPages: (state, action) => {\r\n      state.pages = action.payload;\r\n    },\r\n\r\n    setPost: (state, action) => {\r\n      state.post = action.payload;\r\n    },\r\n\r\n    setIsLoadingPost: (state, action) => {\r\n      state.isLoadingPost = action.payload;\r\n    },\r\n\r\n    setErrorMessage: (state, action) => {\r\n      state.errorMessage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setPosts,\r\n  setPages,\r\n  setPost,\r\n  setIsLoadingPost,\r\n  setErrorMessage,\r\n} = postReducer.actions;\r\n\r\nexport const getPosts = () => (dispatch) => {\r\n  dispatch(setIsLoadingPost(true));\r\n  getPostsAPI().then((res) => {\r\n    dispatch(setPosts(res));\r\n    dispatch(setIsLoadingPost(false));\r\n  });\r\n};\r\n\r\nexport const getPaginationPost = (page, limit) => (dispatch) => {\r\n  dispatch(setIsLoadingPost(true));\r\n  getPaginationPostAPI(page, limit).then((res) => {\r\n    const dataCount = res.headers.get(\"x-total-count\");\r\n    const totalPage = Math.ceil(dataCount / limit);\r\n    dispatch(setPages(pagination(totalPage)));\r\n    return res.json().then((res) => {\r\n      dispatch(setPosts(res));\r\n      dispatch(setIsLoadingPost(false));\r\n    });\r\n  });\r\n};\r\n\r\nexport const getPost = (id) => (dispatch) => {\r\n  dispatch(setIsLoadingPost(true));\r\n  return getPostAPI(id).then((res) => {\r\n    dispatch(setPost(res[0]));\r\n    dispatch(setIsLoadingPost(false));\r\n    return res[0];\r\n  });\r\n};\r\n\r\nexport const addPost = (title, body) => (dispatch) => {\r\n  dispatch(setIsLoadingPost(true));\r\n  dispatch(setErrorMessage(null));\r\n  return addPostAPI(title, body).then((res) => {\r\n    if (res.ok === 0) {\r\n      dispatch(setIsLoadingPost(false));\r\n      return dispatch(setErrorMessage(res.message));\r\n    }\r\n    dispatch(setIsLoadingPost(false));\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const editPost = (id, title, body) => (dispatch) => {\r\n  dispatch(setIsLoadingPost(true));\r\n  dispatch(setErrorMessage(null));\r\n  return editPostAPI(id, title, body).then((res) => {\r\n    if (res.ok === 0) {\r\n      dispatch(setIsLoadingPost(false));\r\n      return dispatch(setErrorMessage(res.message));\r\n    }\r\n    dispatch(setIsLoadingPost(false));\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const deletePost = (id) => (dispatch) => {\r\n  return deletePostAPI(id).then((res) => res);\r\n};\r\n\r\nexport default postReducer.reducer;\r\n","const selectPost = (store) => store.posts.post;\r\nconst selectPosts = (store) => store.posts.posts;\r\nconst selectPages = (store) => store.posts.pages;\r\nconst selectIsLoadingPost = (store) => store.posts.isLoadingPost;\r\nconst selectPostErrorMessage = (store) => store.posts.errorMessage;\r\nconst selectUser = (store) => store.user.user;\r\nconst selectIsLoadingAuth = (store) => store.user.isLoadingAuth;\r\nconst selectAuthErrorMessage = (store) => store.user.errorMessage;\r\n\r\nexport {\r\n  selectPost,\r\n  selectPosts,\r\n  selectPages,\r\n  selectIsLoadingPost,\r\n  selectPostErrorMessage,\r\n  selectUser,\r\n  selectIsLoadingAuth,\r\n  selectAuthErrorMessage,\r\n};\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport { addPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectIsLoadingPost,\n  selectPostErrorMessage,\n} from \"../../redux/selector\";\n\nconst ErrorMessage = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  color: red;\n`;\n\nconst Form = styled.form`\n  margin: 30px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 62px 72px; ;\n`;\n\nconst InputWrapper = styled.div`\n  width: 800px;\n  display: flex;\n\n  & + & {\n    margin-top: 23px;\n  }\n  input {\n    width: 700px;\n    height: 40px;\n    padding: 0 13px;\n    box-sizing: border-box;\n    font-size: 16px;\n    outline: transparent;\n  }\n`;\nconst InputLabel = styled.div`\n  margin-right: 20px;\n  font-size: 22px;\n`;\n\nconst TextArea = styled.textarea`\n  width: 700px;\n  height: 200px;\n  padding: 8px 13px;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nconst SubmitButton = styled.button`\n  margin: 53px auto;\n  width: 400px;\n  height: 56px;\n  outline: transparent;\n  background-color: gray;\n  border-radius: 20px;\n  border: 1px solid gray;\n  color: white;\n  cursor: pointer;\n  font-size: 18px;\n`;\n\nconst AddPostPage = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingPost);\n  const errorMessage = useSelector(selectPostErrorMessage);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoading) return;\n    dispatch(addPost(title, body)).then((res) => {\n      if (res.id) history.push(`/post/${res.id}`);\n    });\n  };\n\n  return (\n    <>\n      {!isLoading ? (\n        <Form onSubmit={handleSubmit}>\n          <InputWrapper>\n            <InputLabel>標題</InputLabel>\n            <input value={title} onChange={(e) => setTitle(e.target.value)} />\n          </InputWrapper>\n          <InputWrapper>\n            <InputLabel>內容</InputLabel>\n            <TextArea value={body} onChange={(e) => setBody(e.target.value)} />\n          </InputWrapper>\n          <SubmitButton>發布</SubmitButton>\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        </Form>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default AddPostPage;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport { getPost, editPost, setPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectIsLoadingPost,\n  selectPostErrorMessage,\n} from \"../../redux/selector\";\n\nconst ErrorMessage = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  color: red;\n`;\n\nconst Form = styled.form`\n  margin: 30px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 62px 72px; ;\n`;\n\nconst InputWrapper = styled.div`\n  width: 800px;\n  display: flex;\n\n  & + & {\n    margin-top: 23px;\n  }\n  input {\n    width: 700px;\n    height: 40px;\n    padding: 0 13px;\n    box-sizing: border-box;\n    font-size: 16px;\n    outline: transparent;\n  }\n`;\nconst InputLabel = styled.div`\n  margin-right: 20px;\n  font-size: 22px;\n`;\n\nconst TextArea = styled.textarea`\n  width: 700px;\n  height: 200px;\n  padding: 8px 13px;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nconst SubmitButton = styled.button`\n  margin: 53px auto;\n  width: 400px;\n  height: 56px;\n  outline: transparent;\n  background-color: gray;\n  border-radius: 20px;\n  border: 1px solid gray;\n  color: white;\n  cursor: pointer;\n  font-size: 18px;\n`;\n\nconst AddPostPage = () => {\n  const { id } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingPost);\n  const errorMessage = useSelector(selectPostErrorMessage);\n\n  useEffect(() => {\n    dispatch(getPost(id)).then((res) => {\n      setTitle(res.title);\n      setBody(res.body);\n    });\n    return () => dispatch(setPost(null));\n  }, [dispatch, id]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoading) return;\n    dispatch(editPost(id, title, body)).then(() => history.goBack());\n  };\n\n  return (\n    <>\n      {!isLoading ? (\n        <Form onSubmit={handleSubmit}>\n          <InputWrapper>\n            <InputLabel>標題</InputLabel>\n            <input value={title} onChange={(e) => setTitle(e.target.value)} />\n          </InputWrapper>\n          <InputWrapper>\n            <InputLabel>內容</InputLabel>\n            <TextArea value={body} onChange={(e) => setBody(e.target.value)} />\n          </InputWrapper>\n          <SubmitButton>發布</SubmitButton>\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        </Form>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default AddPostPage;\n","import styled from \"styled-components\";\nimport React, { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectPosts,\n  selectPages,\n  selectIsLoadingPost,\n  selectUser,\n} from \"../../redux/selector\";\nimport {\n  getPaginationPost,\n  deletePost,\n} from \"../../redux/reducers/postReducer\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  padding: 30px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  margin-top: 24px;\n`;\n\nconst PostInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 19px;\n  padding: 12px 22px;\n  background: #eee;\n`;\n\nconst PostTitle = styled.div`\n  color: black;\n  font-size: 24px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostBody = styled.div`\n  margin-top: 20px;\n  overflow: hidden;\n  line-height: 1.5em;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst ReadMore = styled(Link)`\n  display: inline-block;\n  padding: 12px 16px;\n  border: solid 1px #737373;\n  color: #737373;\n  margin-top: 36px;\n  text-decoration: none;\n`;\n\nconst EditButton = styled.button`\n  padding: 3px 12px;\n  border: solid 1px #a8a8a8;\n  color: rgba(0, 0, 0, 0.5);\n  text-decoration: none;\n  font-size: 14px;\n  background: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled.button`\n  padding: 3px 12px;\n  border: solid 1px #a8a8a8;\n  color: rgba(0, 0, 0, 0.5);\n  text-decoration: none;\n  font-size: 14px;\n  margin-left: 5px;\n  background: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst PageContainer = styled.div`\n  margin: 50px 0;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PageBtn = styled.a`\n  position: relative;\n  padding: 10px 20px;\n  margin-left: 2px;\n  color: black;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst Post = ({ post, handleDelete, handleEditClick }) => {\n  const user = useSelector(selectUser);\n\n  return (\n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostInfo>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n        {user && (\n          <div>\n            <EditButton onClick={() => handleEditClick(post.id)}>\n              編輯\n            </EditButton>\n            <DeleteButton onClick={() => handleDelete(post.id)}>\n              刪除\n            </DeleteButton>\n          </div>\n        )}\n      </PostInfo>\n      <PostBody>{post.body}</PostBody>\n      <ReadMore to={`/post/${post.id}`}>READ MORE</ReadMore>\n    </PostContainer>\n  );\n};\n\nconst HomePage = () => {\n  const history = useHistory();\n  const posts = useSelector(selectPosts);\n  const pages = useSelector(selectPages);\n  const isLoading = useSelector(selectIsLoadingPost);\n  const limit = 5;\n  const dispatch = useDispatch();\n\n  const handlePageClick = (page) => {\n    dispatch(getPaginationPost(page, limit));\n  };\n\n  const handleEditClick = (id) => {\n    history.push(`/edit/${id}`);\n  };\n\n  const handleDelete = (id) => {\n    dispatch(deletePost(id)).then(() => {\n      window.location.reload();\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getPaginationPost(1, limit));\n  }, [dispatch]);\n\n  return (\n    <Root>\n      {!isLoading && posts ? (\n        <>\n          {posts.map((post) => (\n            <Post\n              key={post.id}\n              post={post}\n              handleDelete={handleDelete}\n              handleEditClick={handleEditClick}\n            />\n          ))}\n          <PageContainer>\n            {pages &&\n              pages.map((page) => (\n                <PageBtn key={page} onClick={() => handlePageClick(page)}>\n                  {page}\n                </PageBtn>\n              ))}\n          </PageContainer>\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </Root>\n  );\n};\n\nexport default HomePage;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setAuthToken } from \"../../utils\";\r\nimport {\r\n  login as loginAPI,\r\n  register as registerAPI,\r\n  getMe as getMeAPI,\r\n} from \"../../WebAPI\";\r\n\r\nexport const userReducer = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n    isLoadingAuth: false,\r\n    errorMessage: null,\r\n  },\r\n  reducers: {\r\n    setIsLoadingAuth: (state, action) => {\r\n      state.isLoadingAuth = action.payload;\r\n    },\r\n\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    setErrorMessage: (state, action) => {\r\n      state.errorMessage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setIsLoadingAuth,\r\n  setUser,\r\n  setErrorMessage,\r\n} = userReducer.actions;\r\n\r\nexport const getMe = () => (dispatch) => {\r\n  dispatch(setIsLoadingAuth(true));\r\n  dispatch(setErrorMessage(null));\r\n  return getMeAPI().then((res) => {\r\n    if (res.ok === 0) {\r\n      setAuthToken(null);\r\n      dispatch(setIsLoadingAuth(false));\r\n      return dispatch(setErrorMessage(res.message));\r\n    }\r\n    dispatch(setUser(res.data));\r\n    dispatch(setIsLoadingAuth(false));\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  dispatch(setIsLoadingAuth(true));\r\n  dispatch(setErrorMessage(null));\r\n  return loginAPI(username, password).then((res) => {\r\n    if (res.ok !== 1) {\r\n      dispatch(setIsLoadingAuth(false));\r\n      return dispatch(setErrorMessage(res.message));\r\n    }\r\n    setAuthToken(res.token);\r\n    return dispatch(getMe());\r\n  });\r\n};\r\n\r\nexport const register = (username, nickname, password) => (dispatch) => {\r\n  dispatch(setIsLoadingAuth(true));\r\n  dispatch(setErrorMessage(null));\r\n  return registerAPI(username, nickname, password).then((res) => {\r\n    if (res.ok === 0) {\r\n      dispatch(setIsLoadingAuth(false));\r\n      return dispatch(setErrorMessage(res.message));\r\n    }\r\n    setAuthToken(res.token);\r\n    return dispatch(getMe());\r\n  });\r\n};\r\n\r\nexport default userReducer.reducer;\r\n","import styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectIsLoadingAuth,\n  selectAuthErrorMessage,\n} from \"../../redux/selector\";\nimport { login } from \"../../redux/reducers/userReducer\";\n\nconst ErrorMessage = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  color: red;\n`;\n\nconst Form = styled.form`\n  margin: 50px auto;\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 62px 72px; ;\n`;\n\nconst InputWrapper = styled.div`\n  margin-top: 23px;\n\n  input {\n    width: 350px;\n    height: 40px;\n    padding: 0 20px;\n    font-size: 16px;\n    border-radius: 20px;\n    outline: transparent;\n  }\n`;\nconst InputLabel = styled.div`\n  font-size: 14px;\n  margin-left: 21px;\n`;\n\nconst SubmitButton = styled.button`\n  margin: 53px auto;\n  width: 400px;\n  height: 56px;\n  outline: transparent;\n  background-color: gray;\n  border-radius: 20px;\n  border: 1px solid gray;\n  color: white;\n  cursor: pointer;\n  font-size: 18px;\n`;\n\nfunction LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingAuth);\n  const errorMessage = useSelector(selectAuthErrorMessage);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoading) return;\n    dispatch(login(username, password)).then((res) => {\n      if (res.data) history.push(\"/\");\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <InputLabel>USERNAME</InputLabel>\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </InputWrapper>\n      <InputWrapper>\n        <InputLabel>PASSWORD</InputLabel>\n        <input\n          type='password'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </InputWrapper>\n      <SubmitButton>登入</SubmitButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n\nexport default LoginPage;\n","import styled from \"styled-components\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\nimport { getPaginationPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectPosts,\n  selectIsLoadingPost,\n  selectPages,\n} from \"../../redux/selector\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 30px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  margin-top: 24px;\n\n  &:last-child {\n    margin-bottom: 24px;\n  }\n`;\nconst PostTitle = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PageContainer = styled.div`\n  margin: 50px 0;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PageBtn = styled.a`\n  position: relative;\n  padding: 10px 20px;\n  margin-left: 2px;\n  color: black;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst Post = ({ post }) => {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n};\n\nconst HomePage = () => {\n  const posts = useSelector(selectPosts);\n  const isLoading = useSelector(selectIsLoadingPost);\n  const pages = useSelector(selectPages);\n  const dispatch = useDispatch();\n  const limit = 10;\n\n  const handlePageClick = (page) => {\n    dispatch(getPaginationPost(page, limit));\n  };\n\n  useEffect(() => {\n    dispatch(getPaginationPost(1, limit));\n  }, [dispatch]);\n\n  return (\n    <Root>\n      {!isLoading && posts.length > 0 ? (\n        <>\n          {posts.map((post) => (\n            <Post key={post.id} post={post} />\n          ))}\n          <PageContainer>\n            {pages &&\n              pages.map((page) => (\n                <PageBtn key={page} onClick={() => handlePageClick(page)}>\n                  {page}\n                </PageBtn>\n              ))}\n          </PageContainer>\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </Root>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getPost, setPost, deletePost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectPost,\n  selectIsLoadingPost,\n  selectUser,\n} from \"../../redux/selector\";\nimport Spinner from \"../../components/Spinner\";\n\nconst PostContainer = styled.div`\n  width: 80%;\n  min-height: 450px;\n  margin: 50px auto;\n  padding: 30px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n`;\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 19px;\n  padding: 12px 22px;\n  background: #eee;\n`;\n\nconst PostTitle = styled.div`\n  color: black;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostBody = styled.div`\n  margin-top: 20px;\n  white-space: pre-line;\n  word-break: break-word;\n`;\n\nconst EditButton = styled.button`\n  padding: 3px 12px;\n  border: solid 1px #a8a8a8;\n  color: rgba(0, 0, 0, 0.5);\n  text-decoration: none;\n  font-size: 14px;\n  background: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled.button`\n  padding: 3px 12px;\n  border: solid 1px #a8a8a8;\n  color: rgba(0, 0, 0, 0.5);\n  text-decoration: none;\n  font-size: 14px;\n  margin-left: 5px;\n  background: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst PostPage = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const post = useSelector(selectPost);\n  const user = useSelector(selectUser);\n  const isLoading = useSelector(selectIsLoadingPost);\n  const history = useHistory();\n\n  const handleDelete = (id) => {\n    dispatch(deletePost(id)).then(() => {\n      history.goBack();\n    });\n  };\n\n  const handleEditClick = (id) => {\n    history.push(`/edit/${id}`);\n  };\n\n  useEffect(() => {\n    dispatch(getPost(id));\n    return () => dispatch(setPost(null));\n  }, [id, dispatch]);\n\n  return (\n    <>\n      {!isLoading && post ? (\n        <PostContainer>\n          <PostTitle>{post.title}</PostTitle>\n          <PostHeader>\n            <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n            {user && (\n              <div>\n                <EditButton onClick={() => handleEditClick(post.id)}>\n                  編輯\n                </EditButton>\n                <DeleteButton onClick={() => handleDelete(post.id)}>\n                  刪除\n                </DeleteButton>\n              </div>\n            )}\n          </PostHeader>\n          <PostBody>{post.body}</PostBody>\n        </PostContainer>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default PostPage;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectIsLoadingAuth,\n  selectAuthErrorMessage,\n} from \"../../redux/selector\";\nimport { register } from \"../../redux/reducers/userReducer\";\n\nconst ErrorMessage = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  color: red;\n`;\n\nconst Form = styled.form`\n  margin: 50px auto;\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 62px 72px; ;\n`;\n\nconst InputWrapper = styled.div`\n  margin-top: 23px;\n\n  input {\n    width: 350px;\n    height: 40px;\n    padding: 0 20px;\n    font-size: 16px;\n    border-radius: 20px;\n    outline: transparent;\n  }\n`;\nconst InputLabel = styled.div`\n  font-size: 14px;\n  margin-left: 21px;\n`;\n\nconst SubmitButton = styled.button`\n  margin: 53px auto;\n  width: 400px;\n  height: 56px;\n  outline: transparent;\n  background-color: gray;\n  border-radius: 20px;\n  border: 1px solid gray;\n  color: white;\n  cursor: pointer;\n  font-size: 18px;\n`;\n\nconst RegisterPage = () => {\n  const [username, setUsername] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingAuth);\n  const errorMessage = useSelector(selectAuthErrorMessage);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoading) return;\n    dispatch(register(username, nickname, password)).then((res) => {\n      if (res.data) history.push(\"/\");\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <InputLabel>USERNAME</InputLabel>\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </InputWrapper>\n      <InputWrapper>\n        <InputLabel>NICKNAME</InputLabel>\n        <input value={nickname} onChange={(e) => setNickname(e.target.value)} />\n      </InputWrapper>\n      <InputWrapper>\n        <InputLabel>PASSWORD</InputLabel>\n        <input\n          type='password'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </InputWrapper>\n      <SubmitButton>註冊</SubmitButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n};\n\nexport default RegisterPage;\n","import styled from \"styled-components\";\nimport { setAuthToken } from \"../../utils\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser, selectIsLoadingAuth } from \"../../redux/selector\";\nimport { setUser } from \"../../redux/reducers/userReducer\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n  box-sizing: border-box;\n  background: white;\n  z-index: 2;\n`;\n\nconst Brand = styled(Link)`\n  font-size: 32px;\n  font-weight: bold;\n  color: rgba(0, 0, 0, 0.6);\n  text-decoration: none;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 64px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) => props.$active && `background: rgba(0, 0, 0, 0.2)`}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${NavbarList} {\n    margin-left: 30px;\n  }\n`;\n\nfunction Header() {\n  const user = useSelector(selectUser);\n  const isLoading = useSelector(selectIsLoadingAuth);\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    dispatch(setUser(null));\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand to='/'>Blog</Brand>\n        <NavbarList>\n          <Nav to='/' $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to='/post-list' $active={location.pathname === \"/post-list\"}>\n            文章列表\n          </Nav>\n          <Nav to='/about-me' $active={location.pathname === \"/about-me\"}>\n            關於我\n          </Nav>\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {isLoading ? (\n          <></>\n        ) : (\n          <>\n            {!user && (\n              <>\n                <Nav to='/login' $active={location.pathname === \"/login\"}>\n                  登入\n                </Nav>\n                <Nav to='/register' $active={location.pathname === \"/register\"}>\n                  註冊\n                </Nav>\n              </>\n            )}\n            {user && (\n              <Nav to='/new-post' $active={location.pathname === \"/new-post\"}>\n                發布文章\n              </Nav>\n            )}\n            {user && <Nav onClick={handleLogout}>登出</Nav>}\n          </>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n","import styled from \"styled-components\";\nimport React, { useEffect } from \"react\";\nimport {\n  AboutMePage,\n  AddPostPage,\n  EditPostPage,\n  HomePage,\n  LoginPage,\n  PostListPage,\n  PostPage,\n  RegisterPage,\n} from \"../../pages\";\nimport Header from \"../Header\";\nimport { getAuthToken } from \"../../utils\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getMe } from \"../../redux/reducers/userReducer\";\nimport { useDispatch } from \"react-redux\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      dispatch(getMe());\n    }\n  }, [dispatch]);\n\n  return (\n    <Root>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/'>\n            <HomePage />\n          </Route>\n          <Route path='/post-list'>\n            <PostListPage />\n          </Route>\n          <Route path='/about-me'>\n            <AboutMePage />\n          </Route>\n          <Route path='/login'>\n            <LoginPage />\n          </Route>\n          <Route path='/register'>\n            <RegisterPage />\n          </Route>\n          <Route path='/post/:id'>\n            <PostPage />\n          </Route>\n          <Route path='/new-post'>\n            <AddPostPage />\n          </Route>\n          <Route path='/edit/:id'>\n            <EditPostPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Root>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport postReducer from \"./reducers/postReducer\";\r\nimport userReducer from \"./reducers/userReducer\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    posts: postReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}